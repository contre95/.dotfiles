{ pkgs, ... }:
{
  # Cronjobs

  # services.cron = {
  #   enable = true;
  #   systemCronJobs = [
  #     "25 * * * * /usr/bin/rsync -r --ignore-existing --info=NAME --out-format='\%t \%n' /mnt/HDD2/music/ /mnt/HDD/backup/Music >> /mnt/SSD/logs/cronjobs/music-bkp.log"
  #     "# 1st Backup of music from the source (HDD2) to the backup folder"
  #     "21 * * * * /usr/bin/rsync -r --ignore-existing --info=NAME --out-format='\%t \%n' /mnt/HDD2/music/ /home/contre/Music >> /mnt/SSD/logs/cronjobs/music-bkp.log"
  #     # Resets demo*.contre.io database every schedule
  #     "0 * * * * /usr/bin/cp -rf /home/contre/demos_data/data /home/canus/home-server/services/demo/"
  #     # 2nd Backup of music from download source (HDD2) to the media folder in the SSD Deemix download source #https://github.com/contre95/home-server/blob/master/podman/deemix/pod.yml#L31-L34
  #     "28 * * * * /usr/bin/rsync -r --ignore-existing --info=NAME --out-format='\%t \%n' /mnt/SSD/media/deemix/music/Music/ /mnt/HDD2/music/  >> /mnt/SSD/logs/cronjobs/music-bkp2.log"
  #     # Backup all services config director (mounted volume). Configuration files generated by the containers.
  #     "0 6 * * * /usr/bin/rsync -r --info=NAME --out-format='\%t \%n'  /mnt/SSD/config/ /mnt/HDD2/backup/ssd/homeserver-config/ >> /mnt/SSD/logs/cronjobs/config-bkp.log"
  #     # Backup all services data directory (mounted volume). Services data such as, caches, databases, etc
  #     # * Excluding 'photoprism' since the data stored is too big.
  #     "0 6 * * * /usr/bin/rsync -r --exclude 'photoprism' --info=NAME --out-format='\%t \%n'  /mnt/SSD/data/ /mnt/HDD2/backup/ssd/homeserver-data/ >> /mnt/SSD/logs/cronjobs/data-bkp.log"
  #     # Changing permission to zigbe dongle on startup
  #     "@reboot chmod 666 $(/home/canus/home-server/podman/zigbee2mqtt/find-dongle.sh | grep -i sonof | awk -F"
  #     " '{print $1}')"
  #   ];
  # };

  environment.variables = {
    DISK_SSD_A = "/mnt/SSD";
    DISK_HDD_A = "/mnt/HDD2";
  };

  # User process persist after sessions logout since it's a server.
  system.activationScripts = {
    enableLingering = ''
      # remove all existing lingering users
      rm -r /var/lib/systemd/linger
      mkdir /var/lib/systemd/linger
      # enable for the subset of declared home-manager users
      touch /var/lib/systemd/linger/contre 
    '';
  };

  networking.wireless.enable = false;
  networking.wireless.iwd.enable = false;
  networking.firewall = {
    enable = false;
    interfaces.enp89s0 = {
      allowedTCPPorts = [ ];
      allowedUDPPorts = [ ];
    };
    # extraCommands =
    #   ''
    #     iptables -t nat -I PREROUTING -i enp89s0 -p tcp -m tcp --dport 443 -j REDIRECT --to-ports 4430
    #   '';
  };

  home-manager.users.contre = { pkgs, ... }: {
    programs.git.signing.signByDefault = false;
    # home.packages = with pkgs; [
    # ];
  };

  environment.systemPackages = with pkgs; [
    motion
    audit
  ];
  fileSystems."/mnt/HDD2" = {
    device = "/dev/disk/by-uuid/b0b93094-b438-458c-97fe-68d4e49bd007";
    fsType = "ext4"; # Replace with your filesystem type
  };

  fileSystems."/mnt/SSD" = {
    device = "/dev/disk/by-uuid/6373667d-d2c9-4421-bfa8-dc17b5cba982";
    fsType = "ext4"; # Replace with your filesystem type
  };

  fileSystems."/mnt/HDD" = {
    device = "/dev/disk/by-uuid/b84f2f7b-d23f-46e7-bea0-4fcf552ee54c";
    fsType = "ext4"; # Replace with your filesystem type
  };

}
